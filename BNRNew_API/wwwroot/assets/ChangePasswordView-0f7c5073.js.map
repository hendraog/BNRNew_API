{"version":3,"file":"ChangePasswordView-0f7c5073.js","sources":["../../src/views/ChangePasswordView.vue"],"sourcesContent":["<script setup>\r\n    import { ref, onMounted, inject, getCurrentInstance } from 'vue'\r\n    import { useRoute,useRouter  } from 'vue-router'\r\n    import CryptoJS from 'crypto-js';\r\n    import Schema from 'async-validator';\r\n    \r\n\r\n    const httpClient = inject('httpClient');\r\n    const auth = inject('auth');\r\n    const app = getCurrentInstance().appContext;\r\n\r\n\r\n    const dataValidatorDesc = {\r\n        newPassword: {type: 'string', required: true, min:1.0, max:999.0,  message:\"Silahkan input password yg baru\"},\r\n        oldPassword: {type: 'string', required: true, min:1.0, max:999.0,  message:\"Silahkan input password yg lama\"}\r\n    };\r\n\r\n\r\n    const emit = defineEmits(['showLoading','loggedIn'])\r\n\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n\r\n    const newpassword = ref(\"\");\r\n    const oldPassword = ref(\"\");\r\n    const newpassword1 = ref(\"\");\r\n    \r\n\r\n    \r\n    const doChangePassword = async () => {\r\n        const validator = new Schema(dataValidatorDesc);\r\n\r\n        if(newpassword.value != newpassword1.value){\r\n            app.config.globalProperties.showErrorDlg(\"password baru dan konfirmasi Password Baru tidak sama\");\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            \"oldPassword\": oldPassword.value,\r\n            \"newPassword\": newpassword.value\r\n        }\r\n\r\n        validator.validate(data).then(async () => {\r\n            data.oldPassword = CryptoJS.SHA256(data.oldPassword).toString(CryptoJS.enc.Hex);\r\n            data.newPassword = CryptoJS.SHA256(data.newPassword).toString(CryptoJS.enc.Hex);\r\n\r\n            emit('showLoading', true);\r\n            var response = await httpClient('put', '/user/change-password', data);\r\n            emit('showLoading', false);\r\n            \r\n            if(response.status == 200){\r\n                oldPassword.value=\"\";\r\n                newpassword.value=\"\";\r\n                newpassword1.value=\"\";\r\n                app.config.globalProperties.showInfoDlg(response.data.message);\r\n            }else {\r\n                app.config.globalProperties.showErrorDlg(response.message);\r\n            }\r\n            console.log(response);\r\n        }).catch(({ errors, fields }) => {\r\n            var totalMsg = \"\";\r\n            errors.forEach(e=> {                \r\n                totalMsg += \"* \" + (e.message + \"<br>\");\r\n            }); \r\n            app.config.globalProperties.showErrorDlg(totalMsg);\r\n        });\r\n    }\r\n\r\n\r\n    onMounted(async () => {\r\n\r\n    });\r\n</script>\r\n\r\n<template>\r\n    <div class=\"flex items-center justify-center w-screen  h-screen\">\r\n        <div class=\" shadow w-96 rounded-xl bg-gray-700\">\r\n            <div class=\"flex flex-col px-6 py-6 lg:px-8\">\r\n\r\n                <h3 class=\"text-xl font-medium text-white pb-5 self-center\">Change Password</h3>\r\n\r\n                    <MyInputText label=\"Old Password\" maxlength=50\r\n                        v-model:value=\"oldPassword\" />\r\n\r\n                    <MyInputText label=\"New Password\" maxlength=50\r\n                        v-model:value=\"newpassword\" />\r\n\r\n                    <MyInputText label=\"Confirm New Password\" maxlength=50\r\n                        v-model:value=\"newpassword1\" />\r\n                   \r\n                </div>\r\n\r\n                <div class=\"py-3 px-2\">\r\n                    <button @click=\"doChangePassword\"\r\n                    class=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center\">Change Password</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</template>"],"names":["httpClient","inject","app","getCurrentInstance","dataValidatorDesc","emit","__emit","useRoute","useRouter","newpassword","ref","oldPassword","newpassword1","doChangePassword","validator","Schema","data","CryptoJS","response","errors","fields","totalMsg","e","onMounted"],"mappings":"ghBAOI,MAAMA,EAAaC,EAAO,YAAY,EACzBA,EAAO,MAAM,EAC1B,MAAMC,EAAMC,EAAoB,EAAC,WAG3BC,EAAoB,CACtB,YAAa,CAAC,KAAM,SAAU,SAAU,GAAM,IAAI,EAAK,IAAI,IAAQ,QAAQ,iCAAiC,EAC5G,YAAa,CAAC,KAAM,SAAU,SAAU,GAAM,IAAI,EAAK,IAAI,IAAQ,QAAQ,iCAAiC,CACpH,EAGUC,EAAOC,EAECC,EAAU,EACTC,EAAW,EAE1B,MAAMC,EAAcC,EAAI,EAAE,EACpBC,EAAcD,EAAI,EAAE,EACpBE,EAAeF,EAAI,EAAE,EAIrBG,EAAmB,SAAY,CACjC,MAAMC,EAAY,IAAIC,EAAOX,CAAiB,EAE9C,GAAGK,EAAY,OAASG,EAAa,MAAM,CACvCV,EAAI,OAAO,iBAAiB,aAAa,uDAAuD,EAChG,MACH,CAED,IAAIc,EAAO,CACP,YAAeL,EAAY,MAC3B,YAAeF,EAAY,KAC9B,EAEDK,EAAU,SAASE,CAAI,EAAE,KAAK,SAAY,CACtCA,EAAK,YAAcC,EAAS,OAAOD,EAAK,WAAW,EAAE,SAASC,EAAS,IAAI,GAAG,EAC9ED,EAAK,YAAcC,EAAS,OAAOD,EAAK,WAAW,EAAE,SAASC,EAAS,IAAI,GAAG,EAE9EZ,EAAK,cAAe,EAAI,EACxB,IAAIa,EAAW,MAAMlB,EAAW,MAAO,wBAAyBgB,CAAI,EACpEX,EAAK,cAAe,EAAK,EAEtBa,EAAS,QAAU,KAClBP,EAAY,MAAM,GAClBF,EAAY,MAAM,GAClBG,EAAa,MAAM,GACnBV,EAAI,OAAO,iBAAiB,YAAYgB,EAAS,KAAK,OAAO,GAE7DhB,EAAI,OAAO,iBAAiB,aAAagB,EAAS,OAAO,EAE7D,QAAQ,IAAIA,CAAQ,CACvB,CAAA,EAAE,MAAM,CAAC,CAAE,OAAAC,EAAQ,OAAAC,CAAM,IAAO,CAC7B,IAAIC,EAAW,GACfF,EAAO,QAAQG,GAAI,CACfD,GAAY,MAAQC,EAAE,QAAU,OAChD,CAAa,EACDpB,EAAI,OAAO,iBAAiB,aAAamB,CAAQ,CAC7D,CAAS,CACJ,EAGD,OAAAE,EAAU,SAAY,CAE1B,CAAK"}