è
KD:\sourcecode\my_api\my_api\my_api\Controllers\WeatherForecastController.cs
	namespace 	
my_api
 
. 
Controllers 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private		 
static		 
readonly		 
string		  &
[		& '
]		' (
	Summaries		) 2
=		3 4
new		5 8
[		8 9
]		9 :
{

 	
$str 
, 
$str 
, 
$str '
,' (
$str) /
,/ 0
$str1 7
,7 8
$str9 ?
,? @
$strA H
,H I
$strJ O
,O P
$strQ ]
,] ^
$str_ j
} 
; 
private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
( 
Name 
= 
$str ,
), -
]- .
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
while 
( 
true 
) 
{ 
System 
. 
Console 
. 
Out "
." #
WriteLineAsync# 1
(1 2
DateTime2 :
.: ;
Now; >
.> ?
ToLongDateString? O
(O P
)P Q
+R S
$strS V
+W X
RandomY _
._ `
Shared` f
.f g
Nextg k
(k l
-l m
$numm o
,o p
$numq s
)s t
)t u
;v w
Thread 
. 
Sleep 
( 
$num 
)  
;  !
} 
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date 
= 
DateTime 
.  
Now  #
.# $
AddDays$ +
(+ ,
index, 1
)1 2
,2 3
TemperatureC   
=   
Random   %
.  % &
Shared  & ,
.  , -
Next  - 1
(  1 2
-  2 3
$num  3 5
,  5 6
$num  7 9
)  9 :
,  : ;
Summary!! 
=!! 
	Summaries!! #
[!!# $
Random!!$ *
.!!* +
Shared!!+ 1
.!!1 2
Next!!2 6
(!!6 7
	Summaries!!7 @
.!!@ A
Length!!A G
)!!G H
]!!H I
}"" 
)"" 
.## 
ToArray## 
(## 
)## 
;## 
}$$ 	
}%% 
}&& ñ
-D:\sourcecode\my_api\my_api\my_api\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
var

 
app

 
=

 	
builder


 
.

 
Build

 
(

 
)

 
;

 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
Ä
5D:\sourcecode\my_api\my_api\my_api\WeatherForecast.cs
	namespace 	
my_api
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
TemperatureC 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
TemperatureF		 
=>		  "
$num		# %
+		& '
(		( )
int		) ,
)		, -
(		- .
TemperatureC		. :
/		; <
$num		= C
)		C D
;		D E
public 
string 
? 
Summary 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} 